<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\ExtendedController;
use App\Models\Agent;
use App\Models\Cooperative;
use App\Models\Exploitant;
use App\Models\Exploitation;
use App\Models\Gic;
use App\Models\Parcelle;
use App\Models\Point;
use App\User;
use Illuminate\Http\Request;

class ExploitantController extends ExtendedController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $gics = Exploitant::all()->where('agent_id',auth('api')->user()->id);
	    return   response()->json($gics);
    }

    public function IdentificationSync(){
        $data = request()->all();
        for($i=0;$i<count($data);$i++){
            $producteur = $data['producteur'];
            $parcelles = $data['exploitations'];
          $exploitant =  Exploitant::create([
                'mobile_id'=>$producteur['id'],
                'last_name'=>$producteur['last_name'],
                'first_name'=>$producteur['first_name'],
                'village_id'=>$producteur['village_id'],
                'female'=>$producteur['female']?1:0,
                'phone'=>$producteur['phone'],
                'mobile'=>$producteur['mobile'],
                'cni'=>$producteur['cni'],
                'photo_uri'=>$producteur['photo_uri'],
                'niveau_id'=>$producteur['niveau_id'],
                'situation_id'=>$producteur['situation_id'],
                'formation_id'=>$producteur['formation_id'],
                'activite_id'=>$producteur['activite_id'],
                'cooperative_id'=>$producteur['cooperative_id'],
                'gic_id'=>$producteur['gic_id'],
                'dtn'=>$producteur['dtn'],
                'cni_expiration'=>$producteur['cni_expiration'],
                'agent_id'=>$producteur['user_id'],
            ]);
            for($k=0;$k<count($parcelles);$k++){
                Exploitation::create([
                    'exploitant_id'=>$exploitant->id,
                    'year'=>$parcelles[$k]['year'],
                    'nb_pieds'=>$parcelles[$k]['nb_pieds'],
                    'tonnage_to_sell'=>$parcelles[$k]['tonnage_to_sell'],
                    'superficie'=>$parcelles[$k]['superficie'],
                    'tonnage_by_hectare'=>$parcelles[$k]['tonnage_by_hectare']
                ]);
            }
        }

        return response()->json('ok');
    }



    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function sync(Request $request)
    {
        //
       // return response()->json(,200);
        $data = $request->all();
       // return response()->json($data,200);
        //dd($data);
        $img = $data['exploitant_photo'];
        $agent = Agent::find($data['user_id']);
        $exploitant = $data['exploitant'];
        $donnees=[];

        if($request->exploitant_photo){
			$file = $request->exploitant_photo;
			$ext = $file->getClientOriginalExtension();

			$arr_ext = array('jpg','png','jpeg','gif','GIF','JPEG','JPG','PNG','JPG');
			if(in_array($ext,$arr_ext)) {
                if (!file_exists(public_path('img'))) {
					mkdir(public_path('img'));
                    //return response()->json($file,200);
				}
				if (!file_exists(public_path('img') . '/exploitants')) {
					mkdir(public_path('img') . '/exploitants');
				}
				$token = date('ydmhis');
				if (file_exists(public_path('img') . '/exploitants/' . $token . '.' . $ext)) {
					unlink(public_path('img') . '/exploitants/' . $token . '.' . $ext);
				}
				$name = $token . '.' . $ext;
				$file->move(public_path('img/exploitants'), $name);
                //return response()->json($exploitant,200);
				$donnees['photo'] = 'exploitants/' . $name;
                //return response()->json($exploitant,200);
			}
		}
        //return response()->json(['donnee'=>$img],407);

       // dd($img);

        $exploitant['mobile_id'] = $exploitant['id'];
        $donnees['mobile_id'] = $exploitant['id'];
        $donnees['last_name'] = $exploitant['last_name'];
        $donnees['first_name'] = $exploitant['first_name'];
        $donnees['phone'] = $exploitant['phone'];
        $donnees['nb_enfants'] = $exploitant['nb_enfants'];
        $donnees['cni'] = $exploitant['cni'];
        $donnees['lieu'] = $exploitant['lieu'];

        $dt_exp = $exploitant['date_expiration']?date('Y-m-d',strtotime($exploitant['date_expiration'])):null;
        $donnees['date_expiration'] = $dt_exp;
        $dt_n = $exploitant['dtn']?date('Y-m-d',strtotime($exploitant['dtn'])):null;
        $donnees['dtn'] = $dt_n;
        $dt_ad = $exploitant['date_adhesion']?date('Y-m-d',strtotime($exploitant['date_adhesion'])):null;
        $donnees['date_adhesion'] = $dt_ad;

        $donnees['token'] = sha1(date('Yhmdis').$agent->id);

        $donnees['agent_id'] = $agent->id;
        $donnees['village_id'] = $agent->village_id;
        $donnees['zone_id'] = $agent->zone_id;
        $donnees['moi_id'] = date('m');
        $donnees['annee'] = date('Y');
        $donnees['arrondissement_id'] = $agent->arrondissement_id;
        $donnees['departement_id'] = $agent->departement_id;
        $donnees['region_id'] = $agent->region_id;
        $donnees['compte_bancaire'] = $exploitant['compte_bancaire'];
        $donnees['cooperative_id'] = $exploitant['cooperative_id'];
        $donnees['gic_id'] = $exploitant['gic_id'];
        $donnees['niveau_id'] = $exploitant['niveau_id'];
        $donnees['exported'] = 1;
        //return response()->json($agent,200);
       // return response()->json($exploitant,200);

        $expl = Exploitant::create($donnees);
        //return response()->json($expl,200);

        $parcelles = $data['parcelles'];
        //return response()->json($parcelles[0]['points'][0],200);
        if(!empty($parcelles)){
            for($i=0;$i<count($parcelles);$i++){

                $parcelle = $parcelles[$i]['parcelle'];
                $champ = Parcelle::create([
                    'exploitant_id'=>$expl->id,
                    'superficie'=>$parcelle['superficie']?$parcelle['superficie']:0,
                    'date_creation'=>$parcelle['date_creation'],
                    'name'=> 'Parcelle '.($i+1),
                    'village_id'=>$expl->village_id,
               ]);
                //return response()->json($parcelle,200);
                if(isset($parcelles[$i]['points'])){
                    $points = $parcelles[$i]['points'];
                    for($j=0;$j<count($points);$j++){
                        $point = $points[$j];
                        //return response()->json($point,200);
                        Point::create([
                            'parcelle_id'=>$champ->id,
                            'longitude'=>$point['longitude'],
                            'latitude'=>$point['latitude']
                        ]);
                    }
                }
            }
        }
        return response()->json($expl);
    }


}
