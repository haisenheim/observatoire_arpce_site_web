<?php

namespace App\Http\Controllers\Api\Agent;

use App\Http\Controllers\Controller;
use App\Http\Controllers\ExtendedController;
use App\Models\Agent;
use App\Models\Cooperative;
use App\Models\Exploitant;
use App\Models\Gic;
use App\Models\Parcelle;
use App\Models\Point;
use App\User;
use Illuminate\Http\Request;

class ExploitantController extends ExtendedController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {


        $gics = Exploitant::all()->where('agent_id',auth('api')->user()->id);
	    return   response()->json($gics);
    }



    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function sync(Request $request)
    {
        //
        $data = $request->all();
        //dd($data);
        $img = $data['exploitant_photo'];
        $agent = Agent::find($data['user_id']);
        $exploitant = $data['exploitant'];
        if($img){
            $exploitant['photo'] = $this->entityImgCreate($img,"exploitants",now());
        }

        $exploitant['mobile_id'] = $exploitant['id'];
        unset($exploitant['id']);
        $dtn = explode('-',$exploitant['dtn']);
        $exploitant['dtn'] = $dtn[2].'-'.$dtn[1].'-'.$dtn[0];
        $dtn = explode('-',$exploitant['date_adhesion']);
        $exploitant['date_adhesion'] = $dtn[2].'-'.$dtn[1].'-'.$dtn[0];
        $dtn = explode('-',$exploitant['date_expiration']);
        $exploitant['date_expiration'] = $dtn[2].'-'.$dtn[1].'-'.$dtn[0];
        $exploitant['token'] = sha1(date('Yhmdis').$agent->id);
        $exploitant['agent_id'] = $agent->id;
        $exploitant['village_id'] = $agent->village_id;
        $exploitant['zone_id'] = $agent->zone_id;

        $parcelles = $data['parcelles'];
        $expl = Exploitant::create($exploitant);

        for($i=0;$i<count($parcelles);$i++){
            $parcelle = $parcelles[$i]['parcelle'];
            $points = $parcelles[$i]['points'];
             $parcelle['name'] = 'Parcelle '.($i+1);
             $parcelle['exploitant_id'] = $expl->id;
             $parcelle['village_id'] = $expl->village_id;
             unset($parcelle['heritage']);
             unset($parcelle['id']);
             $champ = Parcelle::create($parcelle);
             for($j=0;$j<count($points);$j++){
                $point = $points[$j];
                $point['parcelle_id'] = $champ->id;
                unset($point['id']);
                Point::create($point);
             }

        }

        return response()->json($expl);
    }


}
